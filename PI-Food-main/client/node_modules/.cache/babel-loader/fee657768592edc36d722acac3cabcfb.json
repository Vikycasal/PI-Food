{"ast":null,"code":"var _jsxFileName = \"/Users/victoriacasal/Desktop/Food/PI-Food-main/PI-Food/PI-Food-main/client/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; //uso hooks\n\nimport { getAllRecipes } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport { NavLink } from 'react-router-dom';\nimport Card from \"./Card\"; // import Paged from \"./Paged\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  //esto lo hago basicamente para ir despachando mis acciones y usarlas\n  const dispatch = useDispatch();\n  const allRecipes = useSelector(state => state.recipes); //esto es lo mismo que hacer el map.state.to.props\n  //tener en cuenta como tengo escrito el estado asi no me cometa errores al traermelos\n  //vamos a crear el paginado\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recipesPerPage, setRecipesPerPage] = useState(9); //guardame en un estado local la pagina actual, y una que me lo setee, por eso es 1\n  //en otro estado local, cuantos quiero que aparezcan, quiero 9 segun readme\n\n  const indexOfLastRecipe = currentPage * recipesPerPage; // 9\n\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage; // 0\n  //y lo ultimo que voy a hacer \n\n  const currentRecipes = allRecipes.slice(indexOfFirstRecipe, indexOfLastRecipe); //los personajes que van a estar en la pagina actual\n  //guarda todas las recetas que tengo por paginas\n  //el slice agarra un arreglo y o va cortando dependiendo lo que yo voy pasandole por parametro\n  //y por ultimo creo la constante del paginado\n  //esta es la que me va a ayudar al renderizado\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  }; //vamos a traernos las recetas del estado\n  //para eso utilizamos un useEffect\n\n\n  useEffect(() => {\n    dispatch(getAllRecipes()); //esto es lo mismo que hacer el map.dispatch.toprops\n  }, [dispatch]); //lo que se incluye en el arreglo lo que depende el componente de arriba\n  //fijarse si va o no lleno el array\n  //para que el boton de Refresh all Recipe ande tengo que pasarle un handleClick\n  //sino no puede devolverme la accion que le estoy pidiendo\n\n  function handleClick(e) {\n    e.preventDefault(); //le paso un evento para que no se rompa\n\n    dispatch(getAllRecipes());\n  } //renderizamos la pagina\n\n\n  return (\n    /*#__PURE__*/\n    //empezamos con un div que envuelva todo\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All of Our Recipes!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Filtros\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"asc\",\n            children: \"Ascendente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"desc\",\n            children: \"Descendente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"A-Z\",\n            children: \"A-Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Z-A\",\n            children: \"Z-A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gluten free\",\n            children: \"Gluten Free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dairy free\",\n            children: \"Dairy Free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lacto ovo vegetarian\",\n            children: \"Lacto ovo Vegetarian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"vegan\",\n            children: \"Vegan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"paleolithic\",\n            children: \"Paleolithic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"primal\",\n            children: \"Primal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pescatarian\",\n            children: \"Pescatarian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fodmap friendly\",\n            children: \"Fodmap Friendly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"whole 30\",\n            children: \"Whole 30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"./recipe\",\n        children: \"Create Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          handleClick(e);\n        },\n        children: \"Refresh all Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: allRecipes === null || allRecipes === void 0 ? void 0 : allRecipes.map(element => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: '/recipes/' + element.id,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                image: element.image,\n                name: element.name,\n                diet: element.createdInDb ? element.DietTypes.map(dt => dt.name) : element.diets\n              }, element.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  );\n} // <Paged recipesPerPage={recipesPerPage} \n// allRecipes={allRecipes.length} \n// paginado={paginado} />\n\n_s(Home, \"yG0YL/rmi0wKFofUn2rTN9eHg3I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/victoriacasal/Desktop/Food/PI-Food-main/PI-Food/PI-Food-main/client/src/components/Home.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getAllRecipes","Link","NavLink","Card","Home","dispatch","allRecipes","state","recipes","currentPage","setCurrentPage","recipesPerPage","setRecipesPerPage","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","slice","paginado","pageNumber","handleClick","e","preventDefault","map","element","id","image","name","createdInDb","DietTypes","dt","diets"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; //uso hooks\nimport { getAllRecipes } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport { NavLink } from 'react-router-dom';\nimport Card from \"./Card\";\n// import Paged from \"./Paged\";\n\nexport default function Home () {\n//esto lo hago basicamente para ir despachando mis acciones y usarlas\n    const dispatch = useDispatch(); \n    const allRecipes = useSelector((state) => state.recipes)\n//esto es lo mismo que hacer el map.state.to.props\n//tener en cuenta como tengo escrito el estado asi no me cometa errores al traermelos\n//vamos a crear el paginado\n    const [currentPage, setCurrentPage] = useState(1)\n    const [recipesPerPage, setRecipesPerPage] = useState(9)\n//guardame en un estado local la pagina actual, y una que me lo setee, por eso es 1\n//en otro estado local, cuantos quiero que aparezcan, quiero 9 segun readme\n    const indexOfLastRecipe = currentPage * recipesPerPage // 9\n    const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage // 0\n//y lo ultimo que voy a hacer \n    const currentRecipes = allRecipes.slice(indexOfFirstRecipe, indexOfLastRecipe)\n    //los personajes que van a estar en la pagina actual\n    //guarda todas las recetas que tengo por paginas\n    //el slice agarra un arreglo y o va cortando dependiendo lo que yo voy pasandole por parametro\n\n //y por ultimo creo la constante del paginado\n //esta es la que me va a ayudar al renderizado\n    const paginado = (pageNumber) => {\n        setCurrentPage(pageNumber)\n    }\n\n    //vamos a traernos las recetas del estado\n    //para eso utilizamos un useEffect\n    useEffect (() => {\n        dispatch(getAllRecipes()); //esto es lo mismo que hacer el map.dispatch.toprops\n    }, [dispatch]) //lo que se incluye en el arreglo lo que depende el componente de arriba\n  //fijarse si va o no lleno el array\n\n   //para que el boton de Refresh all Recipe ande tengo que pasarle un handleClick\n   //sino no puede devolverme la accion que le estoy pidiendo\n   function handleClick(e) {\n       e.preventDefault(); //le paso un evento para que no se rompa\n       dispatch(getAllRecipes());\n    }\n\n//renderizamos la pagina\n  return(//empezamos con un div que envuelva todo\n      <div>\n      <h1>All of Our Recipes!</h1>\n      <div className=\"Filtros\">\n      <select>\n                  <option value=\"asc\">Ascendente</option>\n                  <option value=\"desc\">Descendente</option>\n      </select> \n      <select>\n                  <option value=\"A-Z\">A-Z</option>\n                  <option value=\"Z-A\">Z-A</option>\n      </select> \n      <select>\n                  <option value=\"gluten free\">Gluten Free</option>\n                  <option value=\"dairy free\">Dairy Free</option>\n                  <option value=\"lacto ovo vegetarian\">Lacto ovo Vegetarian</option>\n                  <option value=\"vegan\">Vegan</option>\n                  <option value=\"paleolithic\">Paleolithic</option>\n                  <option value=\"primal\">Primal</option>\n                  <option value=\"pescatarian\">Pescatarian</option>\n                  <option value=\"fodmap friendly\">Fodmap Friendly</option>\n                  <option value=\"whole 30\">Whole 30</option>\n      </select>\n      </div>\n      <Link to = \"./recipe\">Create Recipe</Link>\n      <button onClick={e => {handleClick(e)}}>\n          Refresh all Recipes\n      </button>\n      <span>\n        {allRecipes?.map(element => {\n            return(   \n                 <div>\n                     <NavLink to={'/recipes/' + element.id}>\n                        <Card image={element.image} name={element.name} diet={element.createdInDb ? element.DietTypes.map((dt) => dt.name) : element.diets}  key={element.id}/>  \n                     </NavLink>\n                </div>\n            );\n         })}\n      </span> \n      </div>\n  )\n\n}\n\n// <Paged recipesPerPage={recipesPerPage} \n// allRecipes={allRecipes.length} \n// paginado={paginado} />\n"]},"metadata":{},"sourceType":"module"}