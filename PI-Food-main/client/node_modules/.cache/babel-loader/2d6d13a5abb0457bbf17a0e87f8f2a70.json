{"ast":null,"code":"//creo el estado inicial\nconst initialState = {\n  recipes: [],\n  allRecipes: []\n}; //1\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_RECIPES\":\n      return { ...state,\n        recipes: action.payload,\n        allRecipes: action.payload\n      };\n    //hago el primer filtro que es el ascendente y descendente en este caso el score\n\n    case \"ORDER_BY_SCORE\":\n      let orderArray = action.payload === \"asc\" ? state.recipes.sort(function (a, b) {\n        if (a.score > b.score) {\n          return 1;\n        }\n\n        if (b.score > a.score) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.recipes.sort(function (a, b) {\n        if (a.score > b.score) {\n          return -1;\n        }\n\n        if (b.score > a.score) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        recipes: orderArray\n      };\n    //este es el ultimo\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/victoriacasal/Desktop/Food/PI-Food-main/PI-Food/PI-Food-main/client/src/reducer/index.js"],"names":["initialState","recipes","allRecipes","rootReducer","state","action","type","payload","orderArray","sort","a","b","score"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;AAClBC,EAAAA,OAAO,EAAG,EADQ;AAElBC,EAAAA,UAAU,EAAG;AAFK,CAArB,C,CAKA;;AACA,SAASC,WAAT,GAAmD;AAAA,MAA7BC,KAA6B,uEAArBJ,YAAqB;AAAA,MAAPK,MAAO;;AACjD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,aAAL;AACI,aAAM,EACE,GAAGF,KADL;AAEEH,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAFlB;AAGEL,QAAAA,UAAU,EAAGG,MAAM,CAACE;AAHtB,OAAN;AAII;;AACR,SAAK,gBAAL;AACQ,UAAIC,UAAU,GAAGH,MAAM,CAACE,OAAP,KAAiB,KAAjB,GACjBH,KAAK,CAACH,OAAN,CAAcQ,IAAd,CAAmB,UAAUC,CAAV,EAAYC,CAAZ,EAAc;AACzB,YAAGD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAf,EAAqB;AACb,iBAAO,CAAP;AACP;;AACD,YAAGD,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAf,EAAqB;AACb,iBAAO,CAAC,CAAR;AACP;;AACD,eAAO,CAAP;AACP,OARD,CADiB,GAUjBR,KAAK,CAACH,OAAN,CAAcQ,IAAd,CAAmB,UAAUC,CAAV,EAAYC,CAAZ,EAAc;AACzB,YAAGD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAf,EAAqB;AACb,iBAAO,CAAC,CAAR;AACP;;AACD,YAAGD,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAf,EAAqB;AACb,iBAAO,CAAP;AACP;;AACD,eAAO,CAAP;AACP,OARD,CAVA;AAmBA,aAAM,EACE,GAAGR,KADL;AAEEH,QAAAA,OAAO,EAACO;AAFV,OAAN;AAIA;;AACF;AACE,aAAOJ,KAAP;AAjCV;AAmCD;;AAED,eAAeD,WAAf","sourcesContent":["//creo el estado inicial\nconst initialState = {\n   recipes : [],\n   allRecipes : []\n}\n\n//1\nfunction rootReducer (state = initialState, action){\n  switch(action.type) {\n    case \"GET_RECIPES\":\n        return{\n                ...state,\n                recipes: action.payload,\n                allRecipes : action.payload\n          } //hago el primer filtro que es el ascendente y descendente en este caso el score\n    case \"ORDER_BY_SCORE\":\n            let orderArray = action.payload===\"asc\" ? \n            state.recipes.sort(function (a,b){\n                    if(a.score > b.score){\n                            return 1;\n                    }\n                    if(b.score > a.score){\n                            return -1;\n                    }\n                    return 0;\n            }) :\n            state.recipes.sort(function (a,b){\n                    if(a.score > b.score){\n                            return -1;\n                    }\n                    if(b.score > a.score){\n                            return 1;\n                    }\n                    return 0;\n            });\n            return{\n                    ...state,\n                    recipes:orderArray\n            }\n            //este es el ultimo\n          default:\n            return state;\n  }\n}\n \nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}