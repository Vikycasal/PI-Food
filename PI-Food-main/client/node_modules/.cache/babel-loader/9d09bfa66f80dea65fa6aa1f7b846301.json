{"ast":null,"code":"import axios from 'axios';\nexport function getAllRecipes() {\n  return async function (dispatch) {\n    var json = await axios.get('http://localhost:3002/recipes');\n    return dispatch({\n      type: \"GET_RECIPES\",\n      payload: json.data\n    });\n  };\n}\nexport function getNameRecipe(payload) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get('http://localhost:3002/recipes?name=' + payload);\n      return dispatch({\n        type: \"GET_NAME_RECIPE\",\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function getRecipeType() {\n  return async function (dispatch) {\n    var rTypes = await axios.get('http://localhost:3002/types');\n    return dispatch({\n      type: \"GET_RECIPE_TYPE\",\n      payload: rTypes.data\n    });\n  };\n}\nexport function postRecipe(payload) {\n  return async function (dispatch) {\n    const response = await axios.post('http://localhost:3002/recipe', payload);\n    return response;\n  };\n}\nexport function setFilterByDietTypes(payload) {\n  //console.log(payload);\n  return {\n    type: \"FILTER_BY_DIET_TYPES\",\n    payload\n  };\n}\nexport function orderByScore(payload) {\n  return {\n    type: \"ORDER_BY_SCORE\",\n    payload\n  };\n}\nexport function orderByAlphabetics(payload) {\n  return {\n    type: 'ORDER_BY_ALPHA',\n    payload\n  };\n}\nexport function getDetail(id) {\n  return async function (dispatch) {\n    try {\n      var detail = await axios.get('http://localhost:3002/recipes/' + id);\n      return dispatch({\n        type: \"GET_DETAIL\",\n        payload: detail.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}","map":{"version":3,"sources":["/Users/victoriacasal/Desktop/Food/PI-Food-main/PI-Food/PI-Food-main/client/src/actions/index.js"],"names":["axios","getAllRecipes","dispatch","json","get","type","payload","data","getNameRecipe","error","console","log","getRecipeType","rTypes","postRecipe","response","post","setFilterByDietTypes","orderByScore","orderByAlphabetics","getDetail","id","detail"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,aAAT,GAAwB;AACvB,SAAO,gBAAeC,QAAf,EAAwB;AACvB,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,+BAAV,CAAjB;AAEA,WAAOF,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAE,aADE;AAERC,MAAAA,OAAO,EAAEH,IAAI,CAACI;AAFN,KAAD,CAAf;AAIP,GAPD;AAQP;AAED,OAAO,SAASC,aAAT,CAAuBF,OAAvB,EAA+B;AAC9B,SAAO,gBAAeJ,QAAf,EAAwB;AACvB,QAAG;AACK,UAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,wCAAsCE,OAAhD,CAAjB;AACA,aAAOJ,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAE,iBADE;AAERC,QAAAA,OAAO,EAAEH,IAAI,CAACI;AAFN,OAAD,CAAf;AAIP,KAND,CAMC,OAAME,KAAN,EAAY;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACN;AAER,GAXD;AAYP;AAED,OAAO,SAASG,aAAT,GAAwB;AACvB,SAAO,gBAAgBV,QAAhB,EAAyB;AACxB,QAAIW,MAAM,GAAG,MAAMb,KAAK,CAACI,GAAN,CAAU,6BAAV,CAAnB;AACA,WAAOF,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAE,iBADE;AAERC,MAAAA,OAAO,EAAEO,MAAM,CAACN;AAFR,KAAD,CAAf;AAIP,GAND;AAOP;AAED,OAAO,SAASO,UAAT,CAAoBR,OAApB,EAA4B;AAC3B,SAAO,gBAAgBJ,QAAhB,EAAyB;AACxB,UAAMa,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,8BAAX,EAA0CV,OAA1C,CAAvB;AACA,WAAOS,QAAP;AACP,GAHD;AAIP;AAED,OAAO,SAASE,oBAAT,CAA8BX,OAA9B,EAAsC;AACrC;AACA,SAAM;AACED,IAAAA,IAAI,EAAE,sBADR;AAEEC,IAAAA;AAFF,GAAN;AAIP;AAED,OAAO,SAASY,YAAT,CAAsBZ,OAAtB,EAA8B;AAC7B,SAAM;AACED,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA;AAFF,GAAN;AAIP;AAED,OAAO,SAASa,kBAAT,CAA4Bb,OAA5B,EAAqC;AACpC,SAAO;AACHD,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA;AAFG,GAAP;AAIP;AAED,OAAO,SAASc,SAAT,CAAmBC,EAAnB,EAAsB;AACrB,SAAO,gBAAenB,QAAf,EAAwB;AACvB,QAAG;AACK,UAAIoB,MAAM,GAAG,MAAMtB,KAAK,CAACI,GAAN,CAAU,mCAAiCiB,EAA3C,CAAnB;AACA,aAAOnB,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAE,YADE;AAERC,QAAAA,OAAO,EAAEgB,MAAM,CAACf;AAFR,OAAD,CAAf;AAIP,KAND,CAMC,OAAME,KAAN,EAAY;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACP;AACR,GAVD;AAWP","sourcesContent":["import axios from 'axios';\n\nexport function getAllRecipes(){\n        return async function(dispatch){\n                var json = await axios.get('http://localhost:3002/recipes');\n                \n                return dispatch({\n                        type: \"GET_RECIPES\",\n                        payload: json.data\n                })\n        }\n}\n\nexport function getNameRecipe(payload){\n        return async function(dispatch){\n                try{\n                        var json = await axios.get('http://localhost:3002/recipes?name='+payload);\n                        return dispatch({\n                                type: \"GET_NAME_RECIPE\",\n                                payload: json.data\n                        })\n                }catch(error){\n                       console.log(error);\n                }\n\n        }\n}\n\nexport function getRecipeType(){\n        return async function (dispatch){\n                var rTypes = await axios.get('http://localhost:3002/types');\n                return dispatch({\n                        type: \"GET_RECIPE_TYPE\",\n                        payload: rTypes.data,\n                })\n        }\n}\n\nexport function postRecipe(payload){\n        return async function (dispatch){\n                const response = await axios.post('http://localhost:3002/recipe',payload)\n                return response;\n        }\n}\n\nexport function setFilterByDietTypes(payload){\n        //console.log(payload);\n        return{\n                type: \"FILTER_BY_DIET_TYPES\",\n                payload\n        }\n}\n\nexport function orderByScore(payload){\n        return{\n                type: \"ORDER_BY_SCORE\",\n                payload\n        }\n}\n\nexport function orderByAlphabetics(payload) {\n        return {\n            type: 'ORDER_BY_ALPHA',\n            payload\n        }\n}\n\nexport function getDetail(id){\n        return async function(dispatch){\n                try{\n                        var detail = await axios.get('http://localhost:3002/recipes/'+id);\n                        return dispatch({\n                                type: \"GET_DETAIL\",\n                                payload: detail.data\n                        })\n                }catch(error){\n                        console.log(error);\n                }\n        }\n}"]},"metadata":{},"sourceType":"module"}