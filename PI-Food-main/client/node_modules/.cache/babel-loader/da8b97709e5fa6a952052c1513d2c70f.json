{"ast":null,"code":"var _jsxFileName = \"/Users/victoriacasal/Desktop/Food/PI-Food-main/PI-Food/PI-Food-main/client/src/components/RecipeCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { postRecipe, getRecipeType } from '../actions/index';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipeCreate() {\n  _s();\n\n  const dispatch = useDispatch();\n  const types = useSelector(state => state.recipeTypes); //el history y history.push, es basicamente lo que hace para redirigirme a la ruta que yo le diga\n  // const history = useHistory();\n  //tengo que renderizar el formulario y poder guardarlo en un estado\n\n  const [input, setInput] = useState({\n    name: \"\",\n    score: \"\",\n    healthylevel: \"\",\n    resume: \"\",\n    stepbystep: \"\",\n    image: \"\",\n    diets: []\n  });\n  useEffect(() => {\n    dispatch(getRecipeType());\n  }, [dispatch]); //vamos a empezar a aplicar logicas\n  //cada vez que yo cambie mis input no se vayan cambiando\n  //quiero ir guardando lo que el usuario va a ir escribiendo\n\n  function handleChange(e) {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n  } //cada vez que ejecutes esta funcion, ademas de lo que tiene agregale lo que se va modificando\n  //como este se porta de forma distinta tengo que usar otra funcion\n\n\n  function handleSelect(e) {\n    setInput({ ...input,\n      diets: [...input.diets, e.target.value]\n    });\n  } //es la que se utiliza para los tipos de dieta\n  //traeme lo que ya habia y concatenale lo que yo te estoy seleccionando ahora\n  //hago como una lista\n  //por ultimo me falta el submit\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!input.diets.length) {\n      return alert(\"You must choose your diet type\");\n    } else {\n      if (!input.image) input.image = \"https://cdn.pixabay.com/photo/2014/12/21/23/28/recipe-575434_960_720.png\";\n      dispatch(postRecipe(input));\n      alert(\"Recipe created\");\n      setInput({\n        name: \"\",\n        score: \"\",\n        healthylevel: \"\",\n        resume: \"\",\n        stepbystep: \"\",\n        image: \"\",\n        diets: []\n      }); // history.push('/home');\n    }\n  } //renderizo\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create your own recipe!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input.name,\n          name: \"name\",\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input.score,\n          name: \"score\",\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Healthy Level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input.healthylevel,\n          name: \"healthylevel\",\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Resume:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input.resumee,\n          name: \"resume\",\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Steps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input.stepbystep,\n          name: \"stepbystep\",\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input.image,\n          name: \"image\",\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n} //hay un problema que el map lo toma y dsp al rato lo rompe\n\n_s(RecipeCreate, \"UB5SS9w8kl4pNSTJGnJSHhkR4rQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RecipeCreate;\n{\n  /* <select onChange={(e) => handleSelect(e)} name=\"diets\">\n  {types.map((t) => (\n     <option value={t.value} key={t.id}>{t.name}</option>\n  ))}\n  </select> */\n} // <ul><li>{input.types.map(el => el + \",\")}</li></ul> para que vaya seleccionando\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeCreate\");","map":{"version":3,"sources":["/Users/victoriacasal/Desktop/Food/PI-Food-main/PI-Food/PI-Food-main/client/src/components/RecipeCreate.jsx"],"names":["React","useState","useEffect","Link","useHistory","postRecipe","getRecipeType","useDispatch","useSelector","RecipeCreate","dispatch","types","state","recipeTypes","input","setInput","name","score","healthylevel","resume","stepbystep","image","diets","handleChange","e","target","value","handleSelect","handleSubmit","preventDefault","length","alert","resumee"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Link, useHistory} from 'react-router-dom';\nimport {postRecipe, getRecipeType} from '../actions/index';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function RecipeCreate (){\n    const dispatch = useDispatch();\n    const types = useSelector((state) => state.recipeTypes);\n\n//el history y history.push, es basicamente lo que hace para redirigirme a la ruta que yo le diga\n    // const history = useHistory();\n\n    //tengo que renderizar el formulario y poder guardarlo en un estado\n   const [input, setInput] = useState({\n    name: \"\",\n    score:\"\",\n    healthylevel:\"\",\n    resume: \"\",\n    stepbystep:\"\",\n    image:\"\",\n    diets:[],\n   })\n\nuseEffect(() => {\n    dispatch(getRecipeType())\n},[dispatch])\n\n//vamos a empezar a aplicar logicas\n//cada vez que yo cambie mis input no se vayan cambiando\n//quiero ir guardando lo que el usuario va a ir escribiendo\nfunction handleChange(e){\n    setInput({\n            ...input,\n            [e.target.name]: e.target.value,\n    })\n    \n}\n//cada vez que ejecutes esta funcion, ademas de lo que tiene agregale lo que se va modificando\n\n//como este se porta de forma distinta tengo que usar otra funcion\nfunction handleSelect(e){\n               \n    setInput({\n            ...input,\n            diets: [...input.diets, e.target.value],\n    })\n}\n//es la que se utiliza para los tipos de dieta\n//traeme lo que ya habia y concatenale lo que yo te estoy seleccionando ahora\n//hago como una lista\n\n//por ultimo me falta el submit\nfunction handleSubmit(e) {\n    e.preventDefault();\n    if(!input.diets.length){\n        return alert(\"You must choose your diet type\")\n}else{\n    if(!input.image) input.image=\"https://cdn.pixabay.com/photo/2014/12/21/23/28/recipe-575434_960_720.png\"\n    dispatch(postRecipe(input));\n    alert(\"Recipe created\")\n    setInput({\n          name: \"\",\n          score:\"\",\n          healthylevel:\"\",\n          resume: \"\",\n          stepbystep:\"\",\n          image:\"\",\n          diets:[],  \n        })\n        // history.push('/home');\n}\n}\n\n//renderizo\nreturn(\n    <div>\n        <Link to = \"/home\"><button>Go back</button></Link>\n        <h1>Create your own recipe!</h1>\n        <form onSubmit={(e) => handleSubmit(e)}>\n            <div>\n                <label>Name:</label>\n                <input\n                type = \"text\"\n                value = {input.name}\n                name = \"name\"\n                onChange={(e) => handleChange(e)}\n                />\n            </div>\n            <div>\n                <label>Score:</label>\n                <input\n                type = \"text\"\n                value = {input.score}\n                name = \"score\"\n                onChange={(e) => handleChange(e)}\n                />\n            </div>\n            <div>\n                <label>Healthy Level:</label>\n                <input\n                type = \"text\"\n                value = {input.healthylevel}\n                name = \"healthylevel\"\n                onChange={(e) => handleChange(e)}\n                />\n            </div>\n            <div>\n                <label>Resume:</label>\n                <input\n                type = \"text\"\n                value = {input.resumee}\n                name = \"resume\"\n                onChange={(e) => handleChange(e)}\n                />\n            </div>\n            <div>\n                <label>Steps:</label>\n                <input\n                type = \"text\"\n                value = {input.stepbystep}\n                name = \"stepbystep\"\n                onChange={(e) => handleChange(e)}\n                />\n            </div>\n            <div>\n                <label>Image:</label>\n                <input\n                type = \"text\"\n                value = {input.image}\n                name = \"image\"\n                onChange={(e) => handleChange(e)}\n                />\n            </div>\n\n\n        <button type=\"submit\">Create Recipe</button>\n        </form>\n    </div>\n)\n\n}\n//hay un problema que el map lo toma y dsp al rato lo rompe\n{/* <select onChange={(e) => handleSelect(e)} name=\"diets\">\n{types.map((t) => (\n    <option value={t.value} key={t.id}>{t.name}</option>\n))}\n</select> */}\n// <ul><li>{input.types.map(el => el + \",\")}</li></ul> para que vaya seleccionando"]},"metadata":{},"sourceType":"module"}