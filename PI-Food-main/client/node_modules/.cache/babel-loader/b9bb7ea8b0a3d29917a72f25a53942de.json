{"ast":null,"code":"const initialState = {\n  recipes: [],\n  allRecipes: [],\n  recipeTypes: [],\n  detail: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_RECIPES\":\n      return { ...state,\n        recipes: action.payload,\n        allRecipes: action.payload\n      };\n\n    case \"FILTER_BY_DIET_TYPES\":\n      const allRecipes = state.allRecipes;\n      const dietsAPI = [];\n      const dietsDB = [];\n      allRecipes.forEach(e => {\n        if (e.hasOwnProperty('diets') && e.diets.includes(action.payload)) {\n          dietsAPI.push(e);\n        }\n      });\n      allRecipes.forEach(e => {\n        if (e.hasOwnProperty('DietTypes') && e.DietTypes.map(c => c.name === action.payload)) {\n          dietsDB.push(e);\n        }\n      });\n      const find = dietsAPI.concat(dietsDB);\n\n      if (find.length) {\n        return { ...state,\n          recipes: find\n        };\n      }\n\n      ;\n      break;\n\n    case \"ORDER_BY_SCORE\":\n      let orderArray = action.payload === \"asc\" ? state.recipes.sort(function (a, b) {\n        if (a.score > b.score) {\n          return 1;\n        }\n\n        if (b.score > a.score) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.recipes.sort(function (a, b) {\n        if (a.score > b.score) {\n          return -1;\n        }\n\n        if (b.score > a.score) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        recipes: orderArray\n      };\n\n    case 'ORDER_BY_ALPHA':\n      let alphaArr = action.payload === 'A-Z' ? state.allRecipes.sort(function (a, b) {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return 1;\n        }\n\n        ;\n\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return -1;\n        }\n\n        ;\n        return 0;\n      }) : state.allRecipes.sort(function (a, b) {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return -1;\n        }\n\n        ;\n\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return 1;\n        }\n\n        ;\n        return 0;\n      });\n      return { ...state,\n        recipes: alphaArr\n      };\n\n    case \"GET_NAME_RECIPE\":\n      return { ...state,\n        recipes: action.payload\n      };\n\n    case \"POST_RECIPE\":\n      return { ...state\n      };\n\n    case \"GET_RECIPE_TYPE\":\n      return { ...state,\n        recipeTypes: action.payload\n      };\n\n    case \"GET_DETAIL\":\n      return { ...state,\n        detail: action.payload\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/victoriacasal/Desktop/Food/PI-Food-main/PI-Food/PI-Food-main/client/src/reducer/index.js"],"names":["initialState","recipes","allRecipes","recipeTypes","detail","rootReducer","state","action","type","payload","dietsAPI","dietsDB","forEach","e","hasOwnProperty","diets","includes","push","DietTypes","map","c","name","find","concat","length","orderArray","sort","a","b","score","alphaArr","toLowerCase"],"mappings":"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","sourcesContent":["\nconst initialState = {\n    recipes: [],\n    allRecipes: [],\n    recipeTypes: [],\n    detail: [],\n}\n\nfunction rootReducer (state = initialState, action){\n    switch (action.type) {\n            case \"GET_RECIPES\":\n                    return{\n                            ...state,\n                            recipes: action.payload,\n                            allRecipes : action.payload\n                    }\n            case \"FILTER_BY_DIET_TYPES\":\n                    const allRecipes = state.allRecipes\n                    const dietsAPI = []\n                    const dietsDB = []\n                    allRecipes.forEach(e => {\n                        if (e.hasOwnProperty('diets') && e.diets.includes(action.payload)) {\n                            dietsAPI.push(e)\n                        }\n                    })\n        \n                    allRecipes.forEach(e => {\n                        if (e.hasOwnProperty('DietTypes') && e.DietTypes.map(c => c.name === action.payload)) {\n                            dietsDB.push(e)\n                        }\n                    })\n                    const find = dietsAPI.concat(dietsDB)\n                    if (find.length) {\n                        return {\n                            ...state,\n                            recipes: find\n                        }\n                    };\n                    break;\n                    \n            case \"ORDER_BY_SCORE\":\n                    let orderArray = action.payload===\"asc\" ? \n                    state.recipes.sort(function (a,b){\n                            if(a.score > b.score){\n                                    return 1;\n                            }\n                            if(b.score > a.score){\n                                    return -1;\n                            }\n                            return 0;\n                    }) :\n                    state.recipes.sort(function (a,b){\n                            if(a.score > b.score){\n                                    return -1;\n                            }\n                            if(b.score > a.score){\n                                    return 1;\n                            }\n                            return 0;\n                    });\n                    return{\n                            ...state,\n                            recipes:orderArray\n                    }\n            \n            case 'ORDER_BY_ALPHA':\n                    let alphaArr = action.payload === 'A-Z' ? state.allRecipes.sort(function (a, b) {\n                              if (a.name.toLowerCase() > b.name.toLowerCase()) {\n                                            return 1;\n                              };\n                              if (a.name.toLowerCase() < b.name.toLowerCase()) {\n                                    return -1;\n                              };\n                              return 0;\n                    }) : state.allRecipes.sort(function (a, b) {\n                            if (a.name.toLowerCase() > b.name.toLowerCase()) {\n                                    return -1;\n                            };\n                            if (a.name.toLowerCase() < b.name.toLowerCase()) {\n                                    return 1;\n                            };\n                            return 0;\n                    });\n                    return {\n                            ...state,\n                            recipes: alphaArr\n                    }\n\n            case \"GET_NAME_RECIPE\":\n                    return{\n                            ...state,\n                            recipes : action.payload,\n                    }\n            case \"POST_RECIPE\":\n                    return{\n                            ...state,\n                    }\n            case \"GET_RECIPE_TYPE\":\n                    return{\n                            ...state,\n                            recipeTypes: action.payload,\n                    }\n            case \"GET_DETAIL\":\n                    return{\n                            ...state,\n                            detail : action.payload,\n                    }\n             default:{\n\n                     return state;\n             }\n    }\n\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}