{"ast":null,"code":"//vamos a ir creando mi archivo de acciones\nimport axios from \"axios\"; //vamos a poner las acciones que voy a necesitar para mi home\n//la primera funcion que creo la hago para traerme todas las recetas desde el back\n//genero la primera conexion entre el back y el front\n//1\n\nexport function getAllRecipes() {\n  return async function (dispatch) {\n    var json = await axios.get(\"http://localhost:3002/recipes\");\n    return dispatch({\n      type: \"GET_RECIPES\",\n      payload: json.data\n    });\n  };\n} //vamos a crear las acciones de los filtros, la primera es la del orden ascendente y descendente\n//el primer filtro es el ascendente y el descendente\n//en este caso es el score\n\nexport function orderByScore(payload) {\n  return {\n    type: \"ORDER_BY_SCORE\",\n    payload\n  };\n} //vamos con el segundo filtro que es el que los ordena de la A-Z y Z-A\n\nexport function orderByAlphabetics(payload) {\n  return {\n    type: 'ORDER_BY_ALPHA',\n    payload\n  };\n} //y por ultimo hago el filtro de las dietas\n\nexport function setFilterByDietTypes(payload) {\n  //console.log(payload);\n  return {\n    type: \"FILTER_BY_DIET_TYPES\",\n    payload\n  };\n} //vamos a hacer la ruta que me traiga la informacion para poder hacer la barra de busqueda\n//de esta manera puedo crear el search name\n\nexport function getNameRecipe(payload) {\n  //yo pongo payload porque es lo que le estoy pasando aca, si fuera name, le paso name\n  return async function (dispatch) {\n    //siempre tengo que hacerlo de esta manera\n    try {\n      //tengo que traerme la ruta del back para que esto quede concatenado, tengo que siempre agregarle el payload\n      var json = await axios.get('http://localhost:3002/recipes?name=' + payload);\n      return dispatch({\n        type: \"GET_NAME_RECIPE\",\n        payload: json.data\n      }); //es lo que devuelve la ruta una vez que le asigno algo por name\n    } catch (error) {\n      console.log(error);\n    }\n  };\n} //vamos a traer las recetas y tipos desde el back\n\nexport function getRecipeType() {\n  return async function (dispatch) {\n    var rTypes = await axios.get('http://localhost:3002/types');\n    return dispatch({\n      type: \"GET_RECIPE_TYPE\",\n      payload: rTypes.data\n    }); //solamente me va a traer el name\n  };\n} //esta es la otra accion que necesito para la creacion de una receta\n//y creo la ruta de creacion de la receta\n\nexport function postRecipe(payload) {\n  return async function (dispatch) {\n    const response = await axios.post('http://localhost:3002/recipe', payload);\n    return response; //en este caso es el post no el get\n  };\n}","map":{"version":3,"sources":["/Users/victoriacasal/Desktop/Food/PI-Food-main/PI-Food/PI-Food-main/client/src/actions/index.js"],"names":["axios","getAllRecipes","dispatch","json","get","type","payload","data","orderByScore","orderByAlphabetics","setFilterByDietTypes","getNameRecipe","error","console","log","getRecipeType","rTypes","postRecipe","response","post"],"mappings":"AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;AAEA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,GAAwB;AAC3B,SAAO,gBAAeC,QAAf,EAAyB;AAC5B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,+BAAV,CAAjB;AACA,WAAOF,QAAQ,CAAC;AACZG,MAAAA,IAAI,EAAE,aADM;AAEZC,MAAAA,OAAO,EAAEH,IAAI,CAACI;AAFF,KAAD,CAAf;AAIH,GAND;AAOH,C,CAED;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBF,OAAtB,EAA8B;AACjC,SAAM;AACED,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA;AAFF,GAAN;AAIH,C,CAED;;AACA,OAAO,SAASG,kBAAT,CAA4BH,OAA5B,EAAqC;AACxC,SAAO;AACHD,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA;AAFG,GAAP;AAIH,C,CAED;;AACA,OAAO,SAASI,oBAAT,CAA8BJ,OAA9B,EAAsC;AACzC;AACA,SAAM;AACED,IAAAA,IAAI,EAAE,sBADR;AAEEC,IAAAA;AAFF,GAAN;AAIH,C,CAED;AACA;;AACA,OAAO,SAASK,aAAT,CAAuBL,OAAvB,EAA+B;AAAE;AACpC,SAAO,gBAAeJ,QAAf,EAAwB;AAAE;AACzB,QAAG;AAAE;AACG,UAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,wCAAsCE,OAAhD,CAAjB;AACA,aAAOJ,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAE,iBADE;AAERC,QAAAA,OAAO,EAAEH,IAAI,CAACI;AAFN,OAAD,CAAf,CAFL,CAKQ;AACV,KAND,CAMC,OAAMK,KAAN,EAAY;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACN;AAER,GAXD;AAYH,C,CAED;;AACA,OAAO,SAASG,aAAT,GAAwB;AAC3B,SAAO,gBAAgBb,QAAhB,EAAyB;AACxB,QAAIc,MAAM,GAAG,MAAMhB,KAAK,CAACI,GAAN,CAAU,6BAAV,CAAnB;AACA,WAAOF,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAE,iBADE;AAERC,MAAAA,OAAO,EAAEU,MAAM,CAACT;AAFR,KAAD,CAAf,CAFwB,CAKrB;AACV,GAND;AAOH,C,CACD;AACA;;AACA,OAAO,SAASU,UAAT,CAAoBX,OAApB,EAA4B;AAC/B,SAAO,gBAAgBJ,QAAhB,EAAyB;AACxB,UAAMgB,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAW,8BAAX,EAA0Cb,OAA1C,CAAvB;AACA,WAAOY,QAAP,CAFwB,CAEP;AACxB,GAHD;AAIH","sourcesContent":["//vamos a ir creando mi archivo de acciones\n\nimport axios from \"axios\";\n\n\n//vamos a poner las acciones que voy a necesitar para mi home\n\n//la primera funcion que creo la hago para traerme todas las recetas desde el back\n//genero la primera conexion entre el back y el front\n//1\nexport function getAllRecipes(){\n    return async function(dispatch) {\n        var json = await axios.get(\"http://localhost:3002/recipes\");\n        return dispatch({\n            type: \"GET_RECIPES\",\n            payload: json.data\n    })\n    }\n}\n\n//vamos a crear las acciones de los filtros, la primera es la del orden ascendente y descendente\n//el primer filtro es el ascendente y el descendente\n//en este caso es el score\nexport function orderByScore(payload){\n    return{\n            type: \"ORDER_BY_SCORE\",\n            payload\n    }\n}\n\n//vamos con el segundo filtro que es el que los ordena de la A-Z y Z-A\nexport function orderByAlphabetics(payload) {\n    return {\n        type: 'ORDER_BY_ALPHA',\n        payload\n    }\n}\n\n//y por ultimo hago el filtro de las dietas\nexport function setFilterByDietTypes(payload){\n    //console.log(payload);\n    return{\n            type: \"FILTER_BY_DIET_TYPES\",\n            payload\n    }\n}\n\n//vamos a hacer la ruta que me traiga la informacion para poder hacer la barra de busqueda\n//de esta manera puedo crear el search name\nexport function getNameRecipe(payload){ //yo pongo payload porque es lo que le estoy pasando aca, si fuera name, le paso name\n    return async function(dispatch){ //siempre tengo que hacerlo de esta manera\n            try{ //tengo que traerme la ruta del back para que esto quede concatenado, tengo que siempre agregarle el payload\n                    var json = await axios.get('http://localhost:3002/recipes?name='+payload);\n                    return dispatch({\n                            type: \"GET_NAME_RECIPE\",\n                            payload: json.data\n                    }) //es lo que devuelve la ruta una vez que le asigno algo por name\n            }catch(error){\n                   console.log(error);\n            }\n\n    }\n}\n\n//vamos a traer las recetas y tipos desde el back\nexport function getRecipeType(){\n    return async function (dispatch){\n            var rTypes = await axios.get('http://localhost:3002/types');\n            return dispatch({\n                    type: \"GET_RECIPE_TYPE\",\n                    payload: rTypes.data,\n            }) //solamente me va a traer el name\n    }\n}\n//esta es la otra accion que necesito para la creacion de una receta\n//y creo la ruta de creacion de la receta\nexport function postRecipe(payload){\n    return async function (dispatch){\n            const response = await axios.post('http://localhost:3002/recipe',payload)\n            return response; //en este caso es el post no el get\n    }\n}\n"]},"metadata":{},"sourceType":"module"}